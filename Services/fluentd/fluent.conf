# fluentd/conf/fluent.conf

<source>
  @type forward
  port 24224
  bind 0.0.0.0
  tag docker
</source>

<filter docker>
  @type docker_metadata
</filter>

<source>
  @type tail
  path /logs/traefik/access.log
  pos_file /logs/traefik/httpd-access.log.pos
  tag traefik.access
  <parse>
    @type grok
    # Define your grok pattern to match the log format
    grok_pattern %{IP:client_ip} - %{USERNAME:user_name} \[%{HTTPDATE:timestamp}\] "%{WORD:http_method} %{URIPATHPARAM:request_path} HTTP/%{NUMBER:http_version}" %{NUMBER:response_code} %{NUMBER:response_size} "%{DATA:referrer}" "%{DATA:user_agent}" %{NUMBER:response_time} "%{DATA:application_name}@%{DATA:application_host}" "%{URI:application_url}" %{NUMBER:response_time}ms
  </parse>
</source>

<match traefik.**>
  @type copy
  <store>
    @type postgres
    host database
    port 5432
    database logs_database
    username postgres
    password your_password_here
    include_time_key true
    key_names time, client_ip, timestamp, http_method, request_path, http_version, response_code, response_size, referrer,application_name, application_host, application_url
    sql INSERT INTO traefik_access (time, client_ip, timestamp, http_method, request_path, http_version, response_code, response_size, referrer,application_name, application_host, application_url) VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12)
  </store>
  <store>
    @type stdout
  </store>
</match>

<match fluent.**>
  @type copy
  <store>
    @type postgres
    host database
    port 5432
    database logs_database
    username postgres
    password your_password_here
    include_time_key true
    key_names time, message
    sql INSERT INTO fluentd (time,message) VALUES ($1,$2)
    # sql CREATE TABLE container_name
    # sql INSERT INTO container_name (tag,time,log,container_name) VALUES ($1,$2,$3,$4)
  </store>
  <label @FLUENT_LOG>
    @type stdout
  </label>
</match>

<match docker>
  @type copy
  <store>
    @type postgres
    host database
    port 5432
    database logs_database
    username postgres
    password your_password_here
    include_time_key true
    include_tag_key true
    key_names tag, time, log, container_name
    sql INSERT INTO docker (tag,time,log,container_name) VALUES ($1,$2,$3,$4)
    # sql CREATE TABLE container_name
    # sql INSERT INTO container_name (tag,time,log,container_name) VALUES ($1,$2,$3,$4)
  </store>
  # <store>
  #   @type stdout
  # </store>
</match>



